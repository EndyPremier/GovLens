name: Lint and Test

on:
  push:
    branches:
      - master
      - '*-test'
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint w/ flake8 and black
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve Repository
      uses: actions/checkout@v2
    - name: Setup Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install flake8 and black
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r dev_requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --ignore E501,W503,E203 --show-source --statistics
    - name: Lint with Black
      run: black .
  # Testing for Ubuntu and Windows
  build-main:
    name: Build Python ${{ matrix.python-version }} in ${{ matrix.os }}
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
      # don't want one test to fail all
      fail-fast: false
    steps:
    - name: Retrieve Repository
      uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    - name: Test with django
      run: python manage.py test
  # Optional Testing for MacOS
  build-macos:
    name: (Optional) Build Python ${{ matrix.python-version }} in macos-latest
    needs: lint
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
      # don't want one test to fail all
      fail-fast: false
    steps:
    - name: Retrieve Repository
      uses: actions/checkout@v2
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      continue-on-error: true  # forgive MacOS for lack of support
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
    - name: Test with django
      continue-on-error: true  # forgive MacOS for lack of support
      run: python manage.py test
